name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - ai/**

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        workdir: ["./", "./seo-audit/"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Debug PATH and pnpm
        run: |
          echo $PATH
          which pnpm || true
          pnpm --version || true

      - name: Install dependencies
        working-directory: ${{ matrix.workdir }}
        run: pnpm install --frozen-lockfile || pnpm install

      - name: Lint (if script exists)
        working-directory: ${{ matrix.workdir }}
        run: |
          if pnpm run | grep -q "lint"; then pnpm run lint; else echo "No lint script"; fi

      - name: Build (if script exists)
        working-directory: ${{ matrix.workdir }}
        run: |
          if pnpm run | grep -q "build"; then pnpm run build; else echo "No build script"; fi

      - name: Test (if script exists)
        working-directory: ${{ matrix.workdir }}
        run: |
          if pnpm run | grep -q "test"; then pnpm run test; else echo "No test script"; fi

      - name: Set dummy DATABASE_URL for Prisma
        run: echo "DATABASE_URL=postgresql://user:pass@localhost:5432/db" >> $GITHUB_ENV
