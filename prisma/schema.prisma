generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Run {
  id            String    @id @default(uuid())
  pageUrl       String
  targetKeyword String?
  email         String?
  status        RunStatus @default(queued)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  audits        Audit[]
}

model Audit {
  id        String   @id @default(uuid())
  runId     String
  json      Json
  createdAt DateTime @default(now())
  run       Run      @relation(fields: [runId], references: [id])
}

model GscToken {
  id        String   @id @default(uuid())
  state     String   @unique
  tokens    Json
  createdAt DateTime @default(now())
}

model Domain {
  id                String              @id @default(cuid())
  url               String              @unique
  createdAt         DateTime            @default(now())
  rankSnapshots     RankSnapshot[]
  backlinkSnapshots BacklinkSnapshot[]
}

model RankSnapshot {
  id        String   @id @default(cuid())
  domainId  String
  keyword   String
  position  Int
  provider  String   @default("serpapi")
  createdAt DateTime @default(now())
  Domain    Domain   @relation(fields: [domainId], references: [id])
}

model BacklinkSnapshot {
  id               String   @id @default(cuid())
  domainId         String
  totalBacklinks   Int
  referringDomains Int
  provider         String   @default("openlinkprofiler")
  createdAt        DateTime @default(now())
  Domain           Domain   @relation(fields: [domainId], references: [id])
}

enum RunStatus {
  queued
  running
  ready
  failed
}
